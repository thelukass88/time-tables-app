{"ast":null,"code":"var _jsxFileName = \"/Users/lukeholliday/Documents/time-tables-app/src/components/NumberSelection.js\",\n  _s = $RefreshSig$();\n// src/components/NumberSelection.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberSelection = ({\n  onStart\n}) => {\n  _s();\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  const [squareNumbersOnly, setSquareNumbersOnly] = useState(false);\n  const toggleNumber = number => {\n    if (selectedNumbers.includes(number)) {\n      setSelectedNumbers(selectedNumbers.filter(num => num !== number));\n    } else {\n      setSelectedNumbers([...selectedNumbers, number]);\n    }\n  };\n  const toggleSquareNumbersOnly = () => {\n    setSquareNumbersOnly(!squareNumbersOnly);\n    if (!squareNumbersOnly) {\n      setSelectedNumbers([]); // Clear selected numbers if choosing square-only mode\n    }\n  };\n  const handleStart = () => {\n    if (squareNumbersOnly || selectedNumbers.length > 0) {\n      onStart(selectedNumbers, squareNumbersOnly); // Pass both selected numbers and square-only flag\n    } else {\n      alert('Please select at least one number or enable Square Numbers Only!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"number-selection-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Times Table Numbers (2 to 12)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-selection\",\n      children: [...Array(11)].map((_, index) => {\n        const number = index + 2; // Create numbers from 2 to 12\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleNumber(number),\n          className: selectedNumbers.includes(number) ? 'selected' : '',\n          disabled: squareNumbersOnly // Disable if \"Square Numbers Only\" is selected\n          ,\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: squareNumbersOnly,\n          onChange: toggleSquareNumbersOnly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \"Square Numbers Only (e.g., 2x2, 3x3, ..., 12x12)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      className: \"start-quiz-button\",\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(NumberSelection, \"OY2I950Nm+iYGO333/S8xCjKvEQ=\");\n_c = NumberSelection;\nexport default NumberSelection;\nvar _c;\n$RefreshReg$(_c, \"NumberSelection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NumberSelection","onStart","_s","selectedNumbers","setSelectedNumbers","squareNumbersOnly","setSquareNumbersOnly","toggleNumber","number","includes","filter","num","toggleSquareNumbersOnly","handleStart","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","index","onClick","disabled","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/lukeholliday/Documents/time-tables-app/src/components/NumberSelection.js"],"sourcesContent":["// src/components/NumberSelection.js\nimport React, { useState } from 'react';\n\nconst NumberSelection = ({ onStart }) => {\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  const [squareNumbersOnly, setSquareNumbersOnly] = useState(false);\n\n  const toggleNumber = (number) => {\n    if (selectedNumbers.includes(number)) {\n      setSelectedNumbers(selectedNumbers.filter((num) => num !== number));\n    } else {\n      setSelectedNumbers([...selectedNumbers, number]);\n    }\n  };\n\n  const toggleSquareNumbersOnly = () => {\n    setSquareNumbersOnly(!squareNumbersOnly);\n    if (!squareNumbersOnly) {\n      setSelectedNumbers([]); // Clear selected numbers if choosing square-only mode\n    }\n  };\n\n  const handleStart = () => {\n    if (squareNumbersOnly || selectedNumbers.length > 0) {\n      onStart(selectedNumbers, squareNumbersOnly); // Pass both selected numbers and square-only flag\n    } else {\n      alert('Please select at least one number or enable Square Numbers Only!');\n    }\n  };\n\n  return (\n    <div className=\"number-selection-container\">\n      <h2>Select Times Table Numbers (2 to 12)</h2>\n      <div className=\"number-selection\">\n        {[...Array(11)].map((_, index) => {\n          const number = index + 2; // Create numbers from 2 to 12\n          return (\n            <button\n              key={number}\n              onClick={() => toggleNumber(number)}\n              className={selectedNumbers.includes(number) ? 'selected' : ''}\n              disabled={squareNumbersOnly} // Disable if \"Square Numbers Only\" is selected\n            >\n              {number}\n            </button>\n          );\n        })}\n      </div>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={squareNumbersOnly}\n            onChange={toggleSquareNumbersOnly}\n          />\n          Square Numbers Only (e.g., 2x2, 3x3, ..., 12x12)\n        </label>\n      </div>\n      <button onClick={handleStart} className=\"start-quiz-button\">\n        Start Quiz\n      </button>\n    </div>\n  );\n};\n\nexport default NumberSelection;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}