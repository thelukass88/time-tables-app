{"ast":null,"code":"var _jsxFileName = \"/Users/lukeholliday/Documents/time-tables-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport FrontPage from './components/FrontPage';\nimport Quiz from './components/Quiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(6);\n\n  // Generate 25 questions based on the selected number\n  useEffect(() => {\n    if (selectedNumber !== null) {\n      const newQuestions = [];\n      for (let i = 0; i < 25; i++) {\n        const multiplier = Math.floor(Math.random() * 12) + 1;\n        newQuestions.push({\n          num1: selectedNumber,\n          num2: multiplier,\n          answer: selectedNumber * multiplier\n        });\n      }\n      setQuestions(newQuestions);\n    }\n  }, [selectedNumber]);\n\n  // Handle answer submission and move to next question\n  function handleAnswer() {\n    if (parseInt(userAnswer) === questions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n\n    // Reset answer and timer, and move to the next question or show score if finished\n    setUserAnswer('');\n    setTimeLeft(6);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n  }\n\n  // Timer effect\n  useEffect(() => {\n    if (selectedNumber === null || showScore) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          handleAnswer();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestionIndex, selectedNumber, showScore]);\n\n  // Render the front page if no number is selected, otherwise show the quiz\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: selectedNumber === null ? /*#__PURE__*/_jsxDEV(FrontPage, {\n      onSelectNumber: setSelectedNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \" / 25\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Quiz, {\n      question: questions[currentQuestionIndex],\n      userAnswer: userAnswer,\n      setUserAnswer: setUserAnswer,\n      timeLeft: timeLeft,\n      handleAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"13bYa9Tt4ZO9o5mIFRBeTuHCQ1g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FrontPage","Quiz","jsxDEV","_jsxDEV","App","_s","selectedNumber","setSelectedNumber","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswer","setUserAnswer","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","newQuestions","i","multiplier","Math","floor","random","push","num1","num2","answer","handleAnswer","parseInt","length","timer","setInterval","prev","clearInterval","className","children","onSelectNumber","fileName","_jsxFileName","lineNumber","columnNumber","question","_c","$RefreshReg$"],"sources":["/Users/lukeholliday/Documents/time-tables-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport FrontPage from './components/FrontPage';\nimport Quiz from './components/Quiz';\n\nfunction App() {\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(6);\n\n  // Generate 25 questions based on the selected number\n  useEffect(() => {\n    if (selectedNumber !== null) {\n      const newQuestions = [];\n      for (let i = 0; i < 25; i++) {\n        const multiplier = Math.floor(Math.random() * 12) + 1;\n        newQuestions.push({\n          num1: selectedNumber,\n          num2: multiplier,\n          answer: selectedNumber * multiplier,\n        });\n      }\n      setQuestions(newQuestions);\n    }\n  }, [selectedNumber]);\n\n  // Handle answer submission and move to next question\n  function handleAnswer() {\n    if (parseInt(userAnswer) === questions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n\n    // Reset answer and timer, and move to the next question or show score if finished\n    setUserAnswer('');\n    setTimeLeft(6);\n\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n  }\n\n  // Timer effect\n  useEffect(() => {\n    if (selectedNumber === null || showScore) return;\n\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          handleAnswer();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [currentQuestionIndex, selectedNumber, showScore]);\n\n  // Render the front page if no number is selected, otherwise show the quiz\n  return (\n    <div className=\"App\">\n      {selectedNumber === null ? (\n        <FrontPage onSelectNumber={setSelectedNumber} />\n      ) : showScore ? (\n        <div>\n          <h1>Quiz Complete!</h1>\n          <p>Your Score: {score} / 25</p>\n        </div>\n      ) : (\n        <Quiz\n          question={questions[currentQuestionIndex]}\n          userAnswer={userAnswer}\n          setUserAnswer={setUserAnswer}\n          timeLeft={timeLeft}\n          handleAnswer={handleAnswer}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}