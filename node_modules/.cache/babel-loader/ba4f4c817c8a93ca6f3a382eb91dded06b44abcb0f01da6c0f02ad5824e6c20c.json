{"ast":null,"code":"var _jsxFileName = \"/Users/lukeholliday/Documents/time-tables-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport './App.css';\nimport NumberSelection from './components/NumberSelection';\nimport Quiz from './components/Quiz';\nimport Scoreboard from './components/Scoreboard';\nimport NumberPad from './components/NumberPad';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  const [includeSquares, setIncludeSquares] = useState(false);\n  const [question, setQuestion] = useState(null);\n  const [score, setScore] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const totalQuestions = 25; // Total questions to answer\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [timer, setTimer] = useState(6);\n  const startQuiz = (numbers, squares) => {\n    setSelectedNumbers(numbers);\n    setIncludeSquares(squares);\n    setScore(0); // Reset score\n    setCurrentQuestionIndex(0); // Reset question index\n    setIsQuizStarted(true); // Start the quiz\n    setUserAnswer(''); // Reset user answer\n    setQuestion(generateQuestion()); // Generate the first question\n    setTimer(6); // Reset the timer\n  };\n  const generateQuestion = useCallback(() => {\n    if (selectedNumbers.length === 0) return null;\n    const selectedNum = selectedNumbers[Math.floor(Math.random() * selectedNumbers.length)];\n    const rangeLimit = selectedNum >= 11 ? 12 : 10;\n    const randomNum = Math.floor(Math.random() * rangeLimit) + 1;\n\n    // Randomly assign `selectedNum` as either `num1` or `num2`\n    const [num1, num2] = Math.random() > 0.5 ? [selectedNum, randomNum] : [randomNum, selectedNum];\n    return {\n      num1,\n      num2,\n      answer: num1 * num2\n    };\n  }, [selectedNumbers]);\n  useEffect(() => {\n    if (isQuizStarted && currentQuestionIndex < totalQuestions) {\n      setQuestion(generateQuestion());\n      setTimer(6); // Reset the timer\n      setUserAnswer(''); // Clear the answer for the new question\n    }\n  }, [currentQuestionIndex, generateQuestion, isQuizStarted]);\n  useEffect(() => {\n    if (timer > 0) {\n      const timerId = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId); // Cleanup interval on unmount or when timer changes\n    } else {\n      // Move to next question if time runs out\n      setCurrentQuestionIndex(prev => prev + 1);\n      setUserAnswer(''); // Clear answer\n      setTimer(6); // Reset timer for next question\n    }\n  }, [timer]);\n  const handleAnswer = () => {\n    if (parseInt(userAnswer) === question.answer) {\n      setScore(prevScore => prevScore + 1);\n    }\n    // Move to the next question\n    setCurrentQuestionIndex(prev => prev + 1);\n    setUserAnswer(''); // Clear the user answer\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Times Table Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !isQuizStarted ? /*#__PURE__*/_jsxDEV(NumberSelection, {\n      onStart: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentQuestionIndex < totalQuestions ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Quiz, {\n          question: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time Left: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(NumberPad, {\n          onNumberClick: number => setUserAnswer(prev => prev + number),\n          onClear: () => setUserAnswer(''),\n          onDelete: () => setUserAnswer(prev => prev.slice(0, -1)),\n          handleAnswer: handleAnswer,\n          userAnswer: userAnswer // Pass the user answer for display\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Quiz Finished!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {\n          score: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FDTFCeNPGjZvCwjRFHkWX19Co9w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","NumberSelection","Quiz","Scoreboard","NumberPad","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedNumbers","setSelectedNumbers","includeSquares","setIncludeSquares","question","setQuestion","score","setScore","userAnswer","setUserAnswer","currentQuestionIndex","setCurrentQuestionIndex","totalQuestions","isQuizStarted","setIsQuizStarted","timer","setTimer","startQuiz","numbers","squares","generateQuestion","length","selectedNum","Math","floor","random","rangeLimit","randomNum","num1","num2","answer","timerId","setInterval","prev","clearInterval","handleAnswer","parseInt","prevScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onNumberClick","number","onClear","onDelete","slice","_c","$RefreshReg$"],"sources":["/Users/lukeholliday/Documents/time-tables-app/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport './App.css';\nimport NumberSelection from './components/NumberSelection';\nimport Quiz from './components/Quiz';\nimport Scoreboard from './components/Scoreboard';\nimport NumberPad from './components/NumberPad';\n\nfunction App() {\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  const [includeSquares, setIncludeSquares] = useState(false);\n  const [question, setQuestion] = useState(null);\n  const [score, setScore] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const totalQuestions = 25; // Total questions to answer\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [timer, setTimer] = useState(6);\n\n  const startQuiz = (numbers, squares) => {\n    setSelectedNumbers(numbers);\n    setIncludeSquares(squares);\n    setScore(0); // Reset score\n    setCurrentQuestionIndex(0); // Reset question index\n    setIsQuizStarted(true); // Start the quiz\n    setUserAnswer(''); // Reset user answer\n    setQuestion(generateQuestion()); // Generate the first question\n    setTimer(6); // Reset the timer\n  };\n\n  const generateQuestion = useCallback(() => {\n    if (selectedNumbers.length === 0) return null;\n\n    const selectedNum = selectedNumbers[Math.floor(Math.random() * selectedNumbers.length)];\n    const rangeLimit = selectedNum >= 11 ? 12 : 10;\n    const randomNum = Math.floor(Math.random() * rangeLimit) + 1;\n\n    // Randomly assign `selectedNum` as either `num1` or `num2`\n    const [num1, num2] = Math.random() > 0.5 ? [selectedNum, randomNum] : [randomNum, selectedNum];\n\n    return { num1, num2, answer: num1 * num2 };\n  }, [selectedNumbers]);\n\n  useEffect(() => {\n    if (isQuizStarted && currentQuestionIndex < totalQuestions) {\n      setQuestion(generateQuestion());\n      setTimer(6); // Reset the timer\n      setUserAnswer(''); // Clear the answer for the new question\n    }\n  }, [currentQuestionIndex, generateQuestion, isQuizStarted]);\n\n  useEffect(() => {\n    if (timer > 0) {\n      const timerId = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timerId); // Cleanup interval on unmount or when timer changes\n    } else {\n      // Move to next question if time runs out\n      setCurrentQuestionIndex(prev => prev + 1);\n      setUserAnswer(''); // Clear answer\n      setTimer(6); // Reset timer for next question\n    }\n  }, [timer]);\n\n  const handleAnswer = () => {\n    if (parseInt(userAnswer) === question.answer) {\n      setScore(prevScore => prevScore + 1);\n    }\n    // Move to the next question\n    setCurrentQuestionIndex(prev => prev + 1);\n    setUserAnswer(''); // Clear the user answer\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Times Table Quiz</h1>\n      {!isQuizStarted ? (\n        <NumberSelection onStart={startQuiz} />\n      ) : (\n        <>\n          {currentQuestionIndex < totalQuestions ? (\n            <>\n              <Quiz question={question} />\n              <p>Time Left: {timer}s</p>\n              <NumberPad \n                onNumberClick={number => setUserAnswer(prev => prev + number)} \n                onClear={() => setUserAnswer('')} \n                onDelete={() => setUserAnswer(prev => prev.slice(0, -1))} \n                handleAnswer={handleAnswer}\n                userAnswer={userAnswer} // Pass the user answer for display\n              />\n            </>\n          ) : (\n            <div>\n              <h2>Quiz Finished!</h2>\n              <Scoreboard score={score} />\n              {/* Add button to restart quiz if needed */}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}