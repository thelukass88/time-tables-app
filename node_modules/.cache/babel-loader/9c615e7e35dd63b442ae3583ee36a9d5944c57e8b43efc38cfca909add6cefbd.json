{"ast":null,"code":"var _jsxFileName = \"/Users/lukeholliday/Documents/time-tables-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport FrontPage from './components/FrontPage';\nimport Quiz from './components/Quiz';\nimport NumberPad from './components/NumberPad';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedNumber, setSelectedNumber] = useState(null); // Track chosen times table\n  const [questions, setQuestions] = useState([]); // Array of questions\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Track current question\n  const [userAnswer, setUserAnswer] = useState(''); // User input\n  const [score, setScore] = useState(0); // Score tracking\n  const [showScore, setShowScore] = useState(false); // Control final score display\n  const [timeLeft, setTimeLeft] = useState(6); // Countdown timer\n\n  // Generate 25 questions based on the selected number\n  useEffect(() => {\n    if (selectedNumber !== null) {\n      const newQuestions = Array.from({\n        length: 25\n      }, () => {\n        const multiplier = Math.floor(Math.random() * 12) + 1;\n        return {\n          num1: selectedNumber,\n          num2: multiplier,\n          answer: selectedNumber * multiplier\n        };\n      });\n      setQuestions(newQuestions);\n    }\n  }, [selectedNumber]);\n\n  // Handle answer submission and move to the next question\n  function handleAnswer() {\n    if (questions.length > 0 && questions[currentQuestionIndex] && parseInt(userAnswer) === questions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n    setUserAnswer(''); // Clear answer input\n    setTimeLeft(6); // Reset timer for the next question\n\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1); // Move to next question\n    } else {\n      setShowScore(true); // Show score after last question\n    }\n  }\n\n  // Timer countdown logic\n  useEffect(() => {\n    if (selectedNumber === null || showScore) return; // Skip if no number is selected or quiz is complete\n\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          handleAnswer(); // Automatically submit answer if time runs out\n          return 0;\n        }\n        return prev - 1; // Decrement timer\n      });\n    }, 1000);\n    return () => clearInterval(timer); // Cleanup on component unmount\n  }, [currentQuestionIndex, selectedNumber, showScore]);\n\n  // Render the front page if no number is selected; otherwise, show quiz or score\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: selectedNumber === null ? /*#__PURE__*/_jsxDEV(FrontPage, {\n      onSelectNumber: setSelectedNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \" / 25\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : questions.length > 0 &&\n    /*#__PURE__*/\n    // Only render Quiz if questions are available\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Quiz, {\n        question: questions[currentQuestionIndex],\n        userAnswer: userAnswer,\n        setUserAnswer: setUserAnswer,\n        timeLeft: timeLeft,\n        handleAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NumberPad, {\n        onNumberClick: number => setUserAnswer(userAnswer + number),\n        onClear: () => setUserAnswer(''),\n        onDelete: () => setUserAnswer(userAnswer.slice(0, -1)),\n        handleAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"13bYa9Tt4ZO9o5mIFRBeTuHCQ1g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FrontPage","Quiz","NumberPad","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedNumber","setSelectedNumber","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswer","setUserAnswer","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","newQuestions","Array","from","length","multiplier","Math","floor","random","num1","num2","answer","handleAnswer","parseInt","timer","setInterval","prev","clearInterval","className","children","onSelectNumber","fileName","_jsxFileName","lineNumber","columnNumber","question","onNumberClick","number","onClear","onDelete","slice","_c","$RefreshReg$"],"sources":["/Users/lukeholliday/Documents/time-tables-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport FrontPage from './components/FrontPage';\nimport Quiz from './components/Quiz';\nimport NumberPad from './components/NumberPad';\n\nfunction App() {\n  const [selectedNumber, setSelectedNumber] = useState(null); // Track chosen times table\n  const [questions, setQuestions] = useState([]);             // Array of questions\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Track current question\n  const [userAnswer, setUserAnswer] = useState('');           // User input\n  const [score, setScore] = useState(0);                      // Score tracking\n  const [showScore, setShowScore] = useState(false);          // Control final score display\n  const [timeLeft, setTimeLeft] = useState(6);                // Countdown timer\n\n  // Generate 25 questions based on the selected number\n  useEffect(() => {\n    if (selectedNumber !== null) {\n      const newQuestions = Array.from({ length: 25 }, () => {\n        const multiplier = Math.floor(Math.random() * 12) + 1;\n        return {\n          num1: selectedNumber,\n          num2: multiplier,\n          answer: selectedNumber * multiplier,\n        };\n      });\n      setQuestions(newQuestions);\n    }\n  }, [selectedNumber]);\n\n  // Handle answer submission and move to the next question\n  function handleAnswer() {\n    if (\n      questions.length > 0 && \n      questions[currentQuestionIndex] && \n      parseInt(userAnswer) === questions[currentQuestionIndex].answer\n    ) {\n      setScore(score + 1);\n    }\n\n    setUserAnswer('');      // Clear answer input\n    setTimeLeft(6);         // Reset timer for the next question\n\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1); // Move to next question\n    } else {\n      setShowScore(true);    // Show score after last question\n    }\n  }\n\n  // Timer countdown logic\n  useEffect(() => {\n    if (selectedNumber === null || showScore) return; // Skip if no number is selected or quiz is complete\n\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          handleAnswer(); // Automatically submit answer if time runs out\n          return 0;\n        }\n        return prev - 1; // Decrement timer\n      });\n    }, 1000);\n\n    return () => clearInterval(timer); // Cleanup on component unmount\n  }, [currentQuestionIndex, selectedNumber, showScore]);\n\n  // Render the front page if no number is selected; otherwise, show quiz or score\n  return (\n    <div className=\"App\">\n      {selectedNumber === null ? (\n        <FrontPage onSelectNumber={setSelectedNumber} />\n      ) : showScore ? (\n        <div>\n          <h1>Quiz Complete!</h1>\n          <p>Your Score: {score} / 25</p>\n        </div>\n      ) : (\n        questions.length > 0 && ( // Only render Quiz if questions are available\n          <>\n            <Quiz\n              question={questions[currentQuestionIndex]}\n              userAnswer={userAnswer}\n              setUserAnswer={setUserAnswer}\n              timeLeft={timeLeft}\n              handleAnswer={handleAnswer}\n            />\n            <NumberPad \n              onNumberClick={(number) => setUserAnswer(userAnswer + number)} \n              onClear={() => setUserAnswer('')} \n              onDelete={() => setUserAnswer(userAnswer.slice(0, -1))} \n              handleAnswer={handleAnswer}\n            />\n          </>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}